// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: reval_service.proto
// Protobuf C++ Version: 5.29.0

#ifndef reval_5fservice_2eproto_2epb_2eh
#define reval_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_reval_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_reval_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_reval_5fservice_2eproto;
class CancelEvalOperationRequest;
struct CancelEvalOperationRequestDefaultTypeInternal;
extern CancelEvalOperationRequestDefaultTypeInternal _CancelEvalOperationRequest_default_instance_;
class EvalErrorStatus;
struct EvalErrorStatusDefaultTypeInternal;
extern EvalErrorStatusDefaultTypeInternal _EvalErrorStatus_default_instance_;
class EvalOperation;
struct EvalOperationDefaultTypeInternal;
extern EvalOperationDefaultTypeInternal _EvalOperation_default_instance_;
class EvalRScriptRequest;
struct EvalRScriptRequestDefaultTypeInternal;
extern EvalRScriptRequestDefaultTypeInternal _EvalRScriptRequest_default_instance_;
class EvalResult;
struct EvalResultDefaultTypeInternal;
extern EvalResultDefaultTypeInternal _EvalResult_default_instance_;
class GetEvalOperationRequest;
struct GetEvalOperationRequestDefaultTypeInternal;
extern GetEvalOperationRequestDefaultTypeInternal _GetEvalOperationRequest_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum EvalStatus : int {
  EVAL_UNSPECIFIED = 0,
  EVAL_SUCCESS = 1,
  EVAL_R_CODE_ERROR = 2,
  EVAL_CPP_ERROR = 3,
  EVAL_CANCELLED = 4,
  EvalStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EvalStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EvalStatus_IsValid(int value);
extern const uint32_t EvalStatus_internal_data_[];
constexpr EvalStatus EvalStatus_MIN = static_cast<EvalStatus>(0);
constexpr EvalStatus EvalStatus_MAX = static_cast<EvalStatus>(4);
constexpr int EvalStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
EvalStatus_descriptor();
template <typename T>
const std::string& EvalStatus_Name(T value) {
  static_assert(std::is_same<T, EvalStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EvalStatus_Name().");
  return EvalStatus_Name(static_cast<EvalStatus>(value));
}
template <>
inline const std::string& EvalStatus_Name(EvalStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EvalStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool EvalStatus_Parse(absl::string_view name, EvalStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvalStatus>(
      EvalStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GetEvalOperationRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetEvalOperationRequest) */ {
 public:
  inline GetEvalOperationRequest() : GetEvalOperationRequest(nullptr) {}
  ~GetEvalOperationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetEvalOperationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetEvalOperationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetEvalOperationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetEvalOperationRequest(const GetEvalOperationRequest& from) : GetEvalOperationRequest(nullptr, from) {}
  inline GetEvalOperationRequest(GetEvalOperationRequest&& from) noexcept
      : GetEvalOperationRequest(nullptr, std::move(from)) {}
  inline GetEvalOperationRequest& operator=(const GetEvalOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEvalOperationRequest& operator=(GetEvalOperationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEvalOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEvalOperationRequest* internal_default_instance() {
    return reinterpret_cast<const GetEvalOperationRequest*>(
        &_GetEvalOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetEvalOperationRequest& a, GetEvalOperationRequest& b) { a.Swap(&b); }
  inline void Swap(GetEvalOperationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEvalOperationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEvalOperationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetEvalOperationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEvalOperationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetEvalOperationRequest& from) { GetEvalOperationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetEvalOperationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetEvalOperationRequest"; }

 protected:
  explicit GetEvalOperationRequest(::google::protobuf::Arena* arena);
  GetEvalOperationRequest(::google::protobuf::Arena* arena, const GetEvalOperationRequest& from);
  GetEvalOperationRequest(::google::protobuf::Arena* arena, GetEvalOperationRequest&& from) noexcept
      : GetEvalOperationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:GetEvalOperationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetEvalOperationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EvalResult final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EvalResult) */ {
 public:
  inline EvalResult() : EvalResult(nullptr) {}
  ~EvalResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvalResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvalResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvalResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvalResult(const EvalResult& from) : EvalResult(nullptr, from) {}
  inline EvalResult(EvalResult&& from) noexcept
      : EvalResult(nullptr, std::move(from)) {}
  inline EvalResult& operator=(const EvalResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalResult& operator=(EvalResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvalResult* internal_default_instance() {
    return reinterpret_cast<const EvalResult*>(
        &_EvalResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(EvalResult& a, EvalResult& b) { a.Swap(&b); }
  inline void Swap(EvalResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvalResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvalResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvalResult& from) { EvalResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvalResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EvalResult"; }

 protected:
  explicit EvalResult(::google::protobuf::Arena* arena);
  EvalResult(::google::protobuf::Arena* arena, const EvalResult& from);
  EvalResult(::google::protobuf::Arena* arena, EvalResult&& from) noexcept
      : EvalResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterpreterLinesFieldNumber = 2,
    kSvgPlotsFieldNumber = 3,
    kStatusFieldNumber = 1,
  };
  // repeated string interpreter_lines = 2;
  int interpreter_lines_size() const;
  private:
  int _internal_interpreter_lines_size() const;

  public:
  void clear_interpreter_lines() ;
  const std::string& interpreter_lines(int index) const;
  std::string* mutable_interpreter_lines(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interpreter_lines(int index, Arg_&& value, Args_... args);
  std::string* add_interpreter_lines();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_interpreter_lines(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& interpreter_lines() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_interpreter_lines();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_interpreter_lines() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_interpreter_lines();

  public:
  // repeated string svg_plots = 3;
  int svg_plots_size() const;
  private:
  int _internal_svg_plots_size() const;

  public:
  void clear_svg_plots() ;
  const std::string& svg_plots(int index) const;
  std::string* mutable_svg_plots(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_svg_plots(int index, Arg_&& value, Args_... args);
  std::string* add_svg_plots();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_svg_plots(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& svg_plots() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_svg_plots();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_svg_plots() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_svg_plots();

  public:
  // .EvalStatus status = 1;
  void clear_status() ;
  ::EvalStatus status() const;
  void set_status(::EvalStatus value);

  private:
  ::EvalStatus _internal_status() const;
  void _internal_set_status(::EvalStatus value);

  public:
  // @@protoc_insertion_point(class_scope:EvalResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvalResult& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> interpreter_lines_;
    ::google::protobuf::RepeatedPtrField<std::string> svg_plots_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EvalRScriptRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EvalRScriptRequest) */ {
 public:
  inline EvalRScriptRequest() : EvalRScriptRequest(nullptr) {}
  ~EvalRScriptRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvalRScriptRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvalRScriptRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvalRScriptRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvalRScriptRequest(const EvalRScriptRequest& from) : EvalRScriptRequest(nullptr, from) {}
  inline EvalRScriptRequest(EvalRScriptRequest&& from) noexcept
      : EvalRScriptRequest(nullptr, std::move(from)) {}
  inline EvalRScriptRequest& operator=(const EvalRScriptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalRScriptRequest& operator=(EvalRScriptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalRScriptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvalRScriptRequest* internal_default_instance() {
    return reinterpret_cast<const EvalRScriptRequest*>(
        &_EvalRScriptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EvalRScriptRequest& a, EvalRScriptRequest& b) { a.Swap(&b); }
  inline void Swap(EvalRScriptRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalRScriptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalRScriptRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvalRScriptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvalRScriptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvalRScriptRequest& from) { EvalRScriptRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvalRScriptRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EvalRScriptRequest"; }

 protected:
  explicit EvalRScriptRequest(::google::protobuf::Arena* arena);
  EvalRScriptRequest(::google::protobuf::Arena* arena, const EvalRScriptRequest& from);
  EvalRScriptRequest(::google::protobuf::Arena* arena, EvalRScriptRequest&& from) noexcept
      : EvalRScriptRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRCodeFieldNumber = 1,
  };
  // string r_code = 1;
  void clear_r_code() ;
  const std::string& r_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_code(Arg_&& arg, Args_... args);
  std::string* mutable_r_code();
  PROTOBUF_NODISCARD std::string* release_r_code();
  void set_allocated_r_code(std::string* value);

  private:
  const std::string& _internal_r_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_code(
      const std::string& value);
  std::string* _internal_mutable_r_code();

  public:
  // @@protoc_insertion_point(class_scope:EvalRScriptRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvalRScriptRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr r_code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CancelEvalOperationRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CancelEvalOperationRequest) */ {
 public:
  inline CancelEvalOperationRequest() : CancelEvalOperationRequest(nullptr) {}
  ~CancelEvalOperationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelEvalOperationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelEvalOperationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelEvalOperationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CancelEvalOperationRequest(const CancelEvalOperationRequest& from) : CancelEvalOperationRequest(nullptr, from) {}
  inline CancelEvalOperationRequest(CancelEvalOperationRequest&& from) noexcept
      : CancelEvalOperationRequest(nullptr, std::move(from)) {}
  inline CancelEvalOperationRequest& operator=(const CancelEvalOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelEvalOperationRequest& operator=(CancelEvalOperationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelEvalOperationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelEvalOperationRequest* internal_default_instance() {
    return reinterpret_cast<const CancelEvalOperationRequest*>(
        &_CancelEvalOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CancelEvalOperationRequest& a, CancelEvalOperationRequest& b) { a.Swap(&b); }
  inline void Swap(CancelEvalOperationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelEvalOperationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelEvalOperationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelEvalOperationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelEvalOperationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelEvalOperationRequest& from) { CancelEvalOperationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelEvalOperationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "CancelEvalOperationRequest"; }

 protected:
  explicit CancelEvalOperationRequest(::google::protobuf::Arena* arena);
  CancelEvalOperationRequest(::google::protobuf::Arena* arena, const CancelEvalOperationRequest& from);
  CancelEvalOperationRequest(::google::protobuf::Arena* arena, CancelEvalOperationRequest&& from) noexcept
      : CancelEvalOperationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:CancelEvalOperationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CancelEvalOperationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EvalErrorStatus final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EvalErrorStatus) */ {
 public:
  inline EvalErrorStatus() : EvalErrorStatus(nullptr) {}
  ~EvalErrorStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvalErrorStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvalErrorStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvalErrorStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvalErrorStatus(const EvalErrorStatus& from) : EvalErrorStatus(nullptr, from) {}
  inline EvalErrorStatus(EvalErrorStatus&& from) noexcept
      : EvalErrorStatus(nullptr, std::move(from)) {}
  inline EvalErrorStatus& operator=(const EvalErrorStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalErrorStatus& operator=(EvalErrorStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalErrorStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvalErrorStatus* internal_default_instance() {
    return reinterpret_cast<const EvalErrorStatus*>(
        &_EvalErrorStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EvalErrorStatus& a, EvalErrorStatus& b) { a.Swap(&b); }
  inline void Swap(EvalErrorStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalErrorStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalErrorStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvalErrorStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvalErrorStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvalErrorStatus& from) { EvalErrorStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvalErrorStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EvalErrorStatus"; }

 protected:
  explicit EvalErrorStatus(::google::protobuf::Arena* arena);
  EvalErrorStatus(::google::protobuf::Arena* arena, const EvalErrorStatus& from);
  EvalErrorStatus(::google::protobuf::Arena* arena, EvalErrorStatus&& from) noexcept
      : EvalErrorStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailsFieldNumber = 3,
    kMessageFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // repeated .google.protobuf.Any details = 3;
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  ::google::protobuf::Any* mutable_details(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_details();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_details() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_details();
  public:
  const ::google::protobuf::Any& details(int index) const;
  ::google::protobuf::Any* add_details();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& details() const;
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:EvalErrorStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      31, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvalErrorStatus& from_msg);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > details_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};
// -------------------------------------------------------------------

class EvalOperation final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EvalOperation) */ {
 public:
  inline EvalOperation() : EvalOperation(nullptr) {}
  ~EvalOperation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvalOperation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvalOperation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvalOperation(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvalOperation(const EvalOperation& from) : EvalOperation(nullptr, from) {}
  inline EvalOperation(EvalOperation&& from) noexcept
      : EvalOperation(nullptr, std::move(from)) {}
  inline EvalOperation& operator=(const EvalOperation& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalOperation& operator=(EvalOperation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvalOperation& default_instance() {
    return *internal_default_instance();
  }
  enum ResultCase {
    kEvalResult = 4,
    kError = 5,
    RESULT_NOT_SET = 0,
  };
  static inline const EvalOperation* internal_default_instance() {
    return reinterpret_cast<const EvalOperation*>(
        &_EvalOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EvalOperation& a, EvalOperation& b) { a.Swap(&b); }
  inline void Swap(EvalOperation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvalOperation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvalOperation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvalOperation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvalOperation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvalOperation& from) { EvalOperation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvalOperation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EvalOperation"; }

 protected:
  explicit EvalOperation(::google::protobuf::Arena* arena);
  EvalOperation(::google::protobuf::Arena* arena, const EvalOperation& from);
  EvalOperation(::google::protobuf::Arena* arena, EvalOperation&& from) noexcept
      : EvalOperation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDurationFieldNumber = 2,
    kDoneFieldNumber = 3,
    kEvalResultFieldNumber = 4,
    kErrorFieldNumber = 5,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Duration duration = 2;
  bool has_duration() const;
  void clear_duration() ;
  const ::google::protobuf::Duration& duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_duration();
  ::google::protobuf::Duration* mutable_duration();
  void set_allocated_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_duration();

  private:
  const ::google::protobuf::Duration& _internal_duration() const;
  ::google::protobuf::Duration* _internal_mutable_duration();

  public:
  // bool done = 3;
  void clear_done() ;
  bool done() const;
  void set_done(bool value);

  private:
  bool _internal_done() const;
  void _internal_set_done(bool value);

  public:
  // .EvalResult eval_result = 4;
  bool has_eval_result() const;
  private:
  bool _internal_has_eval_result() const;

  public:
  void clear_eval_result() ;
  const ::EvalResult& eval_result() const;
  PROTOBUF_NODISCARD ::EvalResult* release_eval_result();
  ::EvalResult* mutable_eval_result();
  void set_allocated_eval_result(::EvalResult* value);
  void unsafe_arena_set_allocated_eval_result(::EvalResult* value);
  ::EvalResult* unsafe_arena_release_eval_result();

  private:
  const ::EvalResult& _internal_eval_result() const;
  ::EvalResult* _internal_mutable_eval_result();

  public:
  // .EvalErrorStatus error = 5;
  bool has_error() const;
  private:
  bool _internal_has_error() const;

  public:
  void clear_error() ;
  const ::EvalErrorStatus& error() const;
  PROTOBUF_NODISCARD ::EvalErrorStatus* release_error();
  ::EvalErrorStatus* mutable_error();
  void set_allocated_error(::EvalErrorStatus* value);
  void unsafe_arena_set_allocated_error(::EvalErrorStatus* value);
  ::EvalErrorStatus* unsafe_arena_release_error();

  private:
  const ::EvalErrorStatus& _internal_error() const;
  ::EvalErrorStatus* _internal_mutable_error();

  public:
  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:EvalOperation)
 private:
  class _Internal;
  void set_has_eval_result();
  void set_has_error();
  inline bool has_result() const;
  inline void clear_has_result();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 3,
      26, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvalOperation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Duration* duration_;
    bool done_;
    union ResultUnion {
      constexpr ResultUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::EvalResult* eval_result_;
      ::EvalErrorStatus* error_;
    } result_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reval_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EvalRScriptRequest

// string r_code = 1;
inline void EvalRScriptRequest::clear_r_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_code_.ClearToEmpty();
}
inline const std::string& EvalRScriptRequest::r_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalRScriptRequest.r_code)
  return _internal_r_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EvalRScriptRequest::set_r_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:EvalRScriptRequest.r_code)
}
inline std::string* EvalRScriptRequest::mutable_r_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_code();
  // @@protoc_insertion_point(field_mutable:EvalRScriptRequest.r_code)
  return _s;
}
inline const std::string& EvalRScriptRequest::_internal_r_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_code_.Get();
}
inline void EvalRScriptRequest::_internal_set_r_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_code_.Set(value, GetArena());
}
inline std::string* EvalRScriptRequest::_internal_mutable_r_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_code_.Mutable( GetArena());
}
inline std::string* EvalRScriptRequest::release_r_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EvalRScriptRequest.r_code)
  return _impl_.r_code_.Release();
}
inline void EvalRScriptRequest::set_allocated_r_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.r_code_.IsDefault()) {
    _impl_.r_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:EvalRScriptRequest.r_code)
}

// -------------------------------------------------------------------

// EvalErrorStatus

// int32 code = 1;
inline void EvalErrorStatus::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t EvalErrorStatus::code() const {
  // @@protoc_insertion_point(field_get:EvalErrorStatus.code)
  return _internal_code();
}
inline void EvalErrorStatus::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:EvalErrorStatus.code)
}
inline ::int32_t EvalErrorStatus::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void EvalErrorStatus::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string message = 2;
inline void EvalErrorStatus::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& EvalErrorStatus::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalErrorStatus.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EvalErrorStatus::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:EvalErrorStatus.message)
}
inline std::string* EvalErrorStatus::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:EvalErrorStatus.message)
  return _s;
}
inline const std::string& EvalErrorStatus::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void EvalErrorStatus::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* EvalErrorStatus::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* EvalErrorStatus::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EvalErrorStatus.message)
  return _impl_.message_.Release();
}
inline void EvalErrorStatus::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:EvalErrorStatus.message)
}

// repeated .google.protobuf.Any details = 3;
inline int EvalErrorStatus::_internal_details_size() const {
  return _internal_details().size();
}
inline int EvalErrorStatus::details_size() const {
  return _internal_details_size();
}
inline ::google::protobuf::Any* EvalErrorStatus::mutable_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:EvalErrorStatus.details)
  return _internal_mutable_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* EvalErrorStatus::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:EvalErrorStatus.details)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_details();
}
inline const ::google::protobuf::Any& EvalErrorStatus::details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalErrorStatus.details)
  return _internal_details().Get(index);
}
inline ::google::protobuf::Any* EvalErrorStatus::add_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_details()->Add();
  // @@protoc_insertion_point(field_add:EvalErrorStatus.details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& EvalErrorStatus::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:EvalErrorStatus.details)
  return _internal_details();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
EvalErrorStatus::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.details_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
EvalErrorStatus::_internal_mutable_details() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.details_;
}

// -------------------------------------------------------------------

// EvalOperation

// string name = 1;
inline void EvalOperation::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& EvalOperation::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalOperation.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EvalOperation::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:EvalOperation.name)
}
inline std::string* EvalOperation::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:EvalOperation.name)
  return _s;
}
inline const std::string& EvalOperation::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void EvalOperation::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EvalOperation::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EvalOperation::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EvalOperation.name)
  return _impl_.name_.Release();
}
inline void EvalOperation::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:EvalOperation.name)
}

// .google.protobuf.Duration duration = 2;
inline bool EvalOperation::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& EvalOperation::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& EvalOperation::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalOperation.duration)
  return _internal_duration();
}
inline void EvalOperation::unsafe_arena_set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EvalOperation.duration)
}
inline ::google::protobuf::Duration* EvalOperation::release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* EvalOperation::unsafe_arena_release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EvalOperation.duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* EvalOperation::_internal_mutable_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.duration_;
}
inline ::google::protobuf::Duration* EvalOperation::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:EvalOperation.duration)
  return _msg;
}
inline void EvalOperation::set_allocated_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:EvalOperation.duration)
}

// bool done = 3;
inline void EvalOperation::clear_done() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.done_ = false;
}
inline bool EvalOperation::done() const {
  // @@protoc_insertion_point(field_get:EvalOperation.done)
  return _internal_done();
}
inline void EvalOperation::set_done(bool value) {
  _internal_set_done(value);
  // @@protoc_insertion_point(field_set:EvalOperation.done)
}
inline bool EvalOperation::_internal_done() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.done_;
}
inline void EvalOperation::_internal_set_done(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.done_ = value;
}

// .EvalResult eval_result = 4;
inline bool EvalOperation::has_eval_result() const {
  return result_case() == kEvalResult;
}
inline bool EvalOperation::_internal_has_eval_result() const {
  return result_case() == kEvalResult;
}
inline void EvalOperation::set_has_eval_result() {
  _impl_._oneof_case_[0] = kEvalResult;
}
inline void EvalOperation::clear_eval_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kEvalResult) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.eval_result_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.eval_result_);
    }
    clear_has_result();
  }
}
inline ::EvalResult* EvalOperation::release_eval_result() {
  // @@protoc_insertion_point(field_release:EvalOperation.eval_result)
  if (result_case() == kEvalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.eval_result_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.eval_result_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::EvalResult& EvalOperation::_internal_eval_result() const {
  return result_case() == kEvalResult ? *_impl_.result_.eval_result_ : reinterpret_cast<::EvalResult&>(::_EvalResult_default_instance_);
}
inline const ::EvalResult& EvalOperation::eval_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalOperation.eval_result)
  return _internal_eval_result();
}
inline ::EvalResult* EvalOperation::unsafe_arena_release_eval_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:EvalOperation.eval_result)
  if (result_case() == kEvalResult) {
    clear_has_result();
    auto* temp = _impl_.result_.eval_result_;
    _impl_.result_.eval_result_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EvalOperation::unsafe_arena_set_allocated_eval_result(::EvalResult* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_eval_result();
    _impl_.result_.eval_result_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EvalOperation.eval_result)
}
inline ::EvalResult* EvalOperation::_internal_mutable_eval_result() {
  if (result_case() != kEvalResult) {
    clear_result();
    set_has_eval_result();
    _impl_.result_.eval_result_ =
        ::google::protobuf::Message::DefaultConstruct<::EvalResult>(GetArena());
  }
  return _impl_.result_.eval_result_;
}
inline ::EvalResult* EvalOperation::mutable_eval_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::EvalResult* _msg = _internal_mutable_eval_result();
  // @@protoc_insertion_point(field_mutable:EvalOperation.eval_result)
  return _msg;
}

// .EvalErrorStatus error = 5;
inline bool EvalOperation::has_error() const {
  return result_case() == kError;
}
inline bool EvalOperation::_internal_has_error() const {
  return result_case() == kError;
}
inline void EvalOperation::set_has_error() {
  _impl_._oneof_case_[0] = kError;
}
inline void EvalOperation::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (result_case() == kError) {
    if (GetArena() == nullptr) {
      delete _impl_.result_.error_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_.error_);
    }
    clear_has_result();
  }
}
inline ::EvalErrorStatus* EvalOperation::release_error() {
  // @@protoc_insertion_point(field_release:EvalOperation.error)
  if (result_case() == kError) {
    clear_has_result();
    auto* temp = _impl_.result_.error_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.result_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::EvalErrorStatus& EvalOperation::_internal_error() const {
  return result_case() == kError ? *_impl_.result_.error_ : reinterpret_cast<::EvalErrorStatus&>(::_EvalErrorStatus_default_instance_);
}
inline const ::EvalErrorStatus& EvalOperation::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalOperation.error)
  return _internal_error();
}
inline ::EvalErrorStatus* EvalOperation::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:EvalOperation.error)
  if (result_case() == kError) {
    clear_has_result();
    auto* temp = _impl_.result_.error_;
    _impl_.result_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void EvalOperation::unsafe_arena_set_allocated_error(::EvalErrorStatus* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_result();
  if (value) {
    set_has_error();
    _impl_.result_.error_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EvalOperation.error)
}
inline ::EvalErrorStatus* EvalOperation::_internal_mutable_error() {
  if (result_case() != kError) {
    clear_result();
    set_has_error();
    _impl_.result_.error_ =
        ::google::protobuf::Message::DefaultConstruct<::EvalErrorStatus>(GetArena());
  }
  return _impl_.result_.error_;
}
inline ::EvalErrorStatus* EvalOperation::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::EvalErrorStatus* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:EvalOperation.error)
  return _msg;
}

inline bool EvalOperation::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void EvalOperation::clear_has_result() {
  _impl_._oneof_case_[0] = RESULT_NOT_SET;
}
inline EvalOperation::ResultCase EvalOperation::result_case() const {
  return EvalOperation::ResultCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetEvalOperationRequest

// string name = 1;
inline void GetEvalOperationRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& GetEvalOperationRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetEvalOperationRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEvalOperationRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GetEvalOperationRequest.name)
}
inline std::string* GetEvalOperationRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:GetEvalOperationRequest.name)
  return _s;
}
inline const std::string& GetEvalOperationRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void GetEvalOperationRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GetEvalOperationRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GetEvalOperationRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GetEvalOperationRequest.name)
  return _impl_.name_.Release();
}
inline void GetEvalOperationRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:GetEvalOperationRequest.name)
}

// -------------------------------------------------------------------

// CancelEvalOperationRequest

// string name = 1;
inline void CancelEvalOperationRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CancelEvalOperationRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CancelEvalOperationRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelEvalOperationRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CancelEvalOperationRequest.name)
}
inline std::string* CancelEvalOperationRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:CancelEvalOperationRequest.name)
  return _s;
}
inline const std::string& CancelEvalOperationRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CancelEvalOperationRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CancelEvalOperationRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CancelEvalOperationRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CancelEvalOperationRequest.name)
  return _impl_.name_.Release();
}
inline void CancelEvalOperationRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:CancelEvalOperationRequest.name)
}

// -------------------------------------------------------------------

// EvalResult

// .EvalStatus status = 1;
inline void EvalResult::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::EvalStatus EvalResult::status() const {
  // @@protoc_insertion_point(field_get:EvalResult.status)
  return _internal_status();
}
inline void EvalResult::set_status(::EvalStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:EvalResult.status)
}
inline ::EvalStatus EvalResult::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::EvalStatus>(_impl_.status_);
}
inline void EvalResult::_internal_set_status(::EvalStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated string interpreter_lines = 2;
inline int EvalResult::_internal_interpreter_lines_size() const {
  return _internal_interpreter_lines().size();
}
inline int EvalResult::interpreter_lines_size() const {
  return _internal_interpreter_lines_size();
}
inline void EvalResult::clear_interpreter_lines() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interpreter_lines_.Clear();
}
inline std::string* EvalResult::add_interpreter_lines() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_interpreter_lines()->Add();
  // @@protoc_insertion_point(field_add_mutable:EvalResult.interpreter_lines)
  return _s;
}
inline const std::string& EvalResult::interpreter_lines(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalResult.interpreter_lines)
  return _internal_interpreter_lines().Get(index);
}
inline std::string* EvalResult::mutable_interpreter_lines(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:EvalResult.interpreter_lines)
  return _internal_mutable_interpreter_lines()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EvalResult::set_interpreter_lines(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_interpreter_lines()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:EvalResult.interpreter_lines)
}
template <typename Arg_, typename... Args_>
inline void EvalResult::add_interpreter_lines(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_interpreter_lines(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:EvalResult.interpreter_lines)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EvalResult::interpreter_lines() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:EvalResult.interpreter_lines)
  return _internal_interpreter_lines();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EvalResult::mutable_interpreter_lines() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:EvalResult.interpreter_lines)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interpreter_lines();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EvalResult::_internal_interpreter_lines() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interpreter_lines_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EvalResult::_internal_mutable_interpreter_lines() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interpreter_lines_;
}

// repeated string svg_plots = 3;
inline int EvalResult::_internal_svg_plots_size() const {
  return _internal_svg_plots().size();
}
inline int EvalResult::svg_plots_size() const {
  return _internal_svg_plots_size();
}
inline void EvalResult::clear_svg_plots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.svg_plots_.Clear();
}
inline std::string* EvalResult::add_svg_plots() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_svg_plots()->Add();
  // @@protoc_insertion_point(field_add_mutable:EvalResult.svg_plots)
  return _s;
}
inline const std::string& EvalResult::svg_plots(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EvalResult.svg_plots)
  return _internal_svg_plots().Get(index);
}
inline std::string* EvalResult::mutable_svg_plots(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:EvalResult.svg_plots)
  return _internal_mutable_svg_plots()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EvalResult::set_svg_plots(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_svg_plots()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:EvalResult.svg_plots)
}
template <typename Arg_, typename... Args_>
inline void EvalResult::add_svg_plots(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_svg_plots(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:EvalResult.svg_plots)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EvalResult::svg_plots() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:EvalResult.svg_plots)
  return _internal_svg_plots();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EvalResult::mutable_svg_plots() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:EvalResult.svg_plots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_svg_plots();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EvalResult::_internal_svg_plots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.svg_plots_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EvalResult::_internal_mutable_svg_plots() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.svg_plots_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::EvalStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EvalStatus>() {
  return ::EvalStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // reval_5fservice_2eproto_2epb_2eh
